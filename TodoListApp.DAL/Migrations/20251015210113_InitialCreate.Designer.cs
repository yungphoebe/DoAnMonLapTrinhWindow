// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoListApp.DAL.Models;

#nullable disable

namespace TodoListApp.DAL.Migrations
{
    [DbContext(typeof(ToDoListContext))]
    [Migration("20251015210113_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskTag", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("TagID");

                    b.HasKey("TaskId", "TagId")
                        .HasName("PK__TaskTags__AA3E86753C8D6388");

                    b.HasIndex("TagId");

                    b.ToTable("TaskTags", (string)null);
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.ActivityLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ActionTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int")
                        .HasColumnName("EntityID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LogId")
                        .HasName("PK__Activity__5E5499A83EE997B6");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLog", (string)null);
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.FocusSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SessionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SessionId")
                        .HasName("PK__FocusSes__C9F4927058E3129C");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("FocusSessions");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ColorCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ProjectId")
                        .HasName("PK__Projects__761ABED0E11E3A35");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.ProjectMember", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Viewer");

                    b.HasKey("ProjectId", "UserId")
                        .HasName("PK__ProjectM__A762321A1FCB6362");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectMembers");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReminderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderId"));

                    b.Property<bool?>("IsSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ReminderTime")
                        .HasColumnType("datetime");

                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    b.HasKey("ReminderId")
                        .HasName("PK__Reminder__01A830A7EEA6BD2D");

                    b.HasIndex("TaskId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("ColorCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TagId")
                        .HasName("PK__Tags__657CFA4CC4EB7E58");

                    b.HasIndex("UserId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("ActualMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EstimatedMinutes")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ParentTaskId")
                        .HasColumnType("int")
                        .HasColumnName("ParentTaskID");

                    b.Property<string>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Medium");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TaskId")
                        .HasName("PK__Tasks__7C6949D116655AE9");

                    b.HasIndex("ParentTaskId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC5F92BF47");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534DF6C6CE2")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.UserSetting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingId"));

                    b.Property<int?>("DailyGoalMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(120);

                    b.Property<string>("Language")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("en");

                    b.Property<string>("Theme")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Light");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SettingId")
                        .HasName("PK__UserSett__54372AFD60164E63");

                    b.HasIndex("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.VUserTask", b =>
                {
                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Priority")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vUserTasks", (string)null);
                });

            modelBuilder.Entity("TaskTag", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TaskTags__TagID__4F7CD00D");

                    b.HasOne("TodoListApp.DAL.Models.Task", null)
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TaskTags__TaskID__4E88ABD4");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.ActivityLog", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityL__UserI__5AEE82B9");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.FocusSession", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.Task", "Task")
                        .WithMany("FocusSessions")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__FocusSess__TaskI__571DF1D5");

                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("FocusSessions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__FocusSess__UserI__5629CD9C");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Project", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Projects__UserID__3C69FB99");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.ProjectMember", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.Project", "Project")
                        .WithMany("ProjectMembers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProjectMe__Proje__6477ECF3");

                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("ProjectMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProjectMe__UserI__656C112C");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Reminder", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.Task", "Task")
                        .WithMany("Reminders")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reminders__TaskI__52593CB8");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Tag", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("Tags")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Tags__UserID__4BAC3F29");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Task", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.Task", "ParentTask")
                        .WithMany("InverseParentTask")
                        .HasForeignKey("ParentTaskId")
                        .HasConstraintName("FK__Tasks__ParentTas__46E78A0C");

                    b.HasOne("TodoListApp.DAL.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Tasks__ProjectID__412EB0B6");

                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Tasks__UserID__4222D4EF");

                    b.Navigation("ParentTask");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.UserSetting", b =>
                {
                    b.HasOne("TodoListApp.DAL.Models.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSetti__UserI__5EBF139D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Project", b =>
                {
                    b.Navigation("ProjectMembers");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.Task", b =>
                {
                    b.Navigation("FocusSessions");

                    b.Navigation("InverseParentTask");

                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("TodoListApp.DAL.Models.User", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("FocusSessions");

                    b.Navigation("ProjectMembers");

                    b.Navigation("Projects");

                    b.Navigation("Tags");

                    b.Navigation("Tasks");

                    b.Navigation("UserSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
